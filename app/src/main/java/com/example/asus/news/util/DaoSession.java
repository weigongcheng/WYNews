package com.example.asus.news.util;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.asus.news.live.model.FLHeadBean;
import com.example.asus.news.live.model.FutureBean;
import com.example.asus.news.news.model.TListBean;
import com.example.asus.news.topic.model.WbTopBean;

import com.example.asus.news.util.FLHeadBeanDao;
import com.example.asus.news.util.FutureBeanDao;
import com.example.asus.news.util.TListBeanDao;
import com.example.asus.news.util.WbTopBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig fLHeadBeanDaoConfig;
    private final DaoConfig futureBeanDaoConfig;
    private final DaoConfig tListBeanDaoConfig;
    private final DaoConfig wbTopBeanDaoConfig;

    private final FLHeadBeanDao fLHeadBeanDao;
    private final FutureBeanDao futureBeanDao;
    private final TListBeanDao tListBeanDao;
    private final WbTopBeanDao wbTopBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        fLHeadBeanDaoConfig = daoConfigMap.get(FLHeadBeanDao.class).clone();
        fLHeadBeanDaoConfig.initIdentityScope(type);

        futureBeanDaoConfig = daoConfigMap.get(FutureBeanDao.class).clone();
        futureBeanDaoConfig.initIdentityScope(type);

        tListBeanDaoConfig = daoConfigMap.get(TListBeanDao.class).clone();
        tListBeanDaoConfig.initIdentityScope(type);

        wbTopBeanDaoConfig = daoConfigMap.get(WbTopBeanDao.class).clone();
        wbTopBeanDaoConfig.initIdentityScope(type);

        fLHeadBeanDao = new FLHeadBeanDao(fLHeadBeanDaoConfig, this);
        futureBeanDao = new FutureBeanDao(futureBeanDaoConfig, this);
        tListBeanDao = new TListBeanDao(tListBeanDaoConfig, this);
        wbTopBeanDao = new WbTopBeanDao(wbTopBeanDaoConfig, this);

        registerDao(FLHeadBean.class, fLHeadBeanDao);
        registerDao(FutureBean.class, futureBeanDao);
        registerDao(TListBean.class, tListBeanDao);
        registerDao(WbTopBean.class, wbTopBeanDao);
    }
    
    public void clear() {
        fLHeadBeanDaoConfig.clearIdentityScope();
        futureBeanDaoConfig.clearIdentityScope();
        tListBeanDaoConfig.clearIdentityScope();
        wbTopBeanDaoConfig.clearIdentityScope();
    }

    public FLHeadBeanDao getFLHeadBeanDao() {
        return fLHeadBeanDao;
    }

    public FutureBeanDao getFutureBeanDao() {
        return futureBeanDao;
    }

    public TListBeanDao getTListBeanDao() {
        return tListBeanDao;
    }

    public WbTopBeanDao getWbTopBeanDao() {
        return wbTopBeanDao;
    }

}
